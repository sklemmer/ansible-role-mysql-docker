---
# tasks file for ansible-role-mysql-docker
- name: Test if docker is installed
  command: docker
  register: result
  ignore_errors: True

- assert:
    that: result|success

- set_fact:
    exposed_port: "{{ [ mysql_port + ':3306' ] if mysql_expose_port else [] }}"
    volumes: []
    image: '{{ mysql_image }}:{{ mysql_version }}'
    data_volume: "{{ mysql_data_path + ':' + mysql_data_internal_path }}"
    cnf_volume: "{{ mysql_my_cnf_file + ':' + mysql_my_cnf_internal_file }}"

- set_fact:
    socket_volume: "{{ mysql_socket_path + ':' + mysql_socket_internal_path }}"
  when: mysql_expose_socket == True

- set_fact:
    volumes: "{{ volumes }} + [ '{{ socket_volume }}' ]"
  when: mysql_expose_socket == True

- set_fact:
    volumes: "{{ volumes }} + [ '{{ data_volume }}' ]"

- set_fact:
    volumes: "{{ volumes }} + [ '{{ cnf_volume }}' ]"

# download mysql image
- name: Ensure mysql image exists
  docker_image:
    name: '{{ image }}'

# configure mysql config
- name: Ensure config directory does exist
  file:
    state: directory
    path: '{{ mysql_my_cnf_file | dirname }}'

- name: Ensure mariadb config does exist
  template:
    backup: yes
    src: maria.cnf.j2
    dest: '{{ mysql_my_cnf_file }}'
  when: mysql_image == 'mariadb'

- name: Ensure mysql config does exist
  template:
    backup: yes
    src: mysql.cnf.j2
    dest: '{{ mysql_my_cnf_file }}'
  when: mysql_image != 'mariadb'

# create mysql container
- name: Ensure mysql container is running
  docker_container:
    name: '{{ mysql_container_name }}'
    image: '{{ image }}'
    state: started
    ports: '{{ exposed_port }}'
    volumes: '{{ volumes }}'
    env:
      MYSQL_ROOT_PASSWORD: '{{ mysql_root_password }}'
